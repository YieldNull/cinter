# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'mainwindow.ui'
#
# Created by: PyQt5 UI code generator 5.4.2
#
# WARNING! All changes made in this file will be lost!

from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtGui import QKeySequence
from gui.editor import CodeEditor


class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(930, 650)
        MainWindow.setMinimumSize(QtCore.QSize(0, 0))
        self.centralWidget = QtWidgets.QWidget(MainWindow)
        self.centralWidget.setEnabled(True)
        self.centralWidget.setObjectName("centralWidget")
        self.gridLayout = QtWidgets.QGridLayout(self.centralWidget)
        self.gridLayout.setContentsMargins(2, 0, 2, 0)
        self.gridLayout.setSpacing(6)
        self.gridLayout.setObjectName("gridLayout")
        self.splitterOuter = QtWidgets.QSplitter(self.centralWidget)
        self.splitterOuter.setOrientation(QtCore.Qt.Vertical)
        self.splitterOuter.setObjectName("splitterOuter")
        self.splitterInner = QtWidgets.QSplitter(self.splitterOuter)
        self.splitterInner.setOrientation(QtCore.Qt.Horizontal)
        self.splitterInner.setObjectName("splitterInner")
        self.tabWidgetBrowser = QtWidgets.QTabWidget(self.splitterInner)
        self.tabWidgetBrowser.setTabsClosable(False)
        self.tabWidgetBrowser.setObjectName("tabWidgetBrowser")
        self.tabFile = QtWidgets.QWidget()
        self.tabFile.setObjectName("tabFile")
        self.verticalLayout = QtWidgets.QVBoxLayout(self.tabFile)
        self.verticalLayout.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout.setSpacing(6)
        self.verticalLayout.setObjectName("verticalLayout")
        self.treeViewFile = QtWidgets.QTreeView(self.tabFile)
        self.treeViewFile.setObjectName("treeViewFile")
        self.verticalLayout.addWidget(self.treeViewFile)
        self.tabWidgetBrowser.addTab(self.tabFile, "")
        self.tabToken = QtWidgets.QWidget()
        self.tabToken.setObjectName("tabToken")
        self.verticalLayout_3 = QtWidgets.QVBoxLayout(self.tabToken)
        self.verticalLayout_3.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout_3.setSpacing(6)
        self.verticalLayout_3.setObjectName("verticalLayout_3")
        self.treeViewToken = QtWidgets.QTreeView(self.tabToken)
        self.treeViewToken.setObjectName("treeViewToken")
        self.verticalLayout_3.addWidget(self.treeViewToken)
        self.tabWidgetBrowser.addTab(self.tabToken, "")
        self.tabSyntax = QtWidgets.QWidget()
        self.tabSyntax.setObjectName("tabSyntax")
        self.verticalLayout_4 = QtWidgets.QVBoxLayout(self.tabSyntax)
        self.verticalLayout_4.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout_4.setSpacing(6)
        self.verticalLayout_4.setObjectName("verticalLayout_4")
        self.treeViewSyntax = QtWidgets.QTreeView(self.tabSyntax)
        self.treeViewSyntax.setObjectName("treeViewSyntax")
        self.verticalLayout_4.addWidget(self.treeViewSyntax)
        self.tabWidgetBrowser.addTab(self.tabSyntax, "")
        self.tabWidgetEditor = QtWidgets.QTabWidget(self.splitterInner)
        self.tabWidgetEditor.setTabsClosable(False)
        self.tabWidgetEditor.setObjectName("tabWidgetEditor")
        self.tabEditor = QtWidgets.QWidget()
        self.tabEditor.setObjectName("tabEditor")
        self.horizontalLayout = QtWidgets.QHBoxLayout(self.tabEditor)
        self.horizontalLayout.setContentsMargins(0, 0, 0, 0)
        self.horizontalLayout.setSpacing(6)
        self.horizontalLayout.setObjectName("horizontalLayout")
        self.codeEditor = CodeEditor(self.tabEditor)
        self.codeEditor.setObjectName("codeEditor")
        self.horizontalLayout.addWidget(self.codeEditor)
        self.tabWidgetEditor.addTab(self.tabEditor, "")
        self.tabWidgetOutput = QtWidgets.QTabWidget(self.splitterOuter)
        self.tabWidgetOutput.setObjectName("tabWidgetOutput")
        self.tabConsole = QtWidgets.QWidget()
        self.tabConsole.setObjectName("tabConsole")
        self.verticalLayout_2 = QtWidgets.QVBoxLayout(self.tabConsole)
        self.verticalLayout_2.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout_2.setSpacing(6)
        self.verticalLayout_2.setObjectName("verticalLayout_2")
        self.textBrowserConsole = QtWidgets.QTextBrowser(self.tabConsole)
        self.textBrowserConsole.setObjectName("textBrowserConsole")
        self.verticalLayout_2.addWidget(self.textBrowserConsole)
        self.tabWidgetOutput.addTab(self.tabConsole, "")
        self.gridLayout.addWidget(self.splitterOuter, 0, 0, 1, 1)
        MainWindow.setCentralWidget(self.centralWidget)
        self.menuBar = QtWidgets.QMenuBar(MainWindow)
        self.menuBar.setGeometry(QtCore.QRect(0, 0, 930, 25))
        self.menuBar.setObjectName("menuBar")
        self.menuFile = QtWidgets.QMenu(self.menuBar)
        self.menuFile.setObjectName("menuFile")
        self.menuEditor = QtWidgets.QMenu(self.menuBar)
        self.menuEditor.setObjectName("menuEditor")
        self.menuRun = QtWidgets.QMenu(self.menuBar)
        self.menuRun.setObjectName("menuRun")
        self.menuHelp = QtWidgets.QMenu(self.menuBar)
        self.menuHelp.setObjectName("menuHelp")
        self.menuView = QtWidgets.QMenu(self.menuBar)
        self.menuView.setObjectName("menuView")
        self.menuTest = QtWidgets.QMenu(self.menuBar)
        self.menuTest.setObjectName("menuTest")
        MainWindow.setMenuBar(self.menuBar)
        self.statusBar = QtWidgets.QStatusBar(MainWindow)
        self.statusBar.setObjectName("statusBar")
        MainWindow.setStatusBar(self.statusBar)
        self.toolBar = QtWidgets.QToolBar(MainWindow)
        self.toolBar.setMovable(False)
        self.toolBar.setObjectName("toolBar")
        MainWindow.addToolBar(QtCore.Qt.TopToolBarArea, self.toolBar)
        self.actionNew = QtWidgets.QAction(MainWindow)
        icon = QtGui.QIcon()
        icon.addPixmap(QtGui.QPixmap(":/images/new.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionNew.setIcon(icon)
        self.actionNew.setObjectName("actionNew")
        self.actionOpen = QtWidgets.QAction(MainWindow)
        icon1 = QtGui.QIcon()
        icon1.addPixmap(QtGui.QPixmap(":/images/open.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionOpen.setIcon(icon1)
        self.actionOpen.setObjectName("actionOpen")
        self.actionSave = QtWidgets.QAction(MainWindow)
        icon2 = QtGui.QIcon()
        icon2.addPixmap(QtGui.QPixmap(":/images/save.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionSave.setIcon(icon2)
        self.actionSave.setObjectName("actionSave")
        self.actionCopy = QtWidgets.QAction(MainWindow)
        icon3 = QtGui.QIcon()
        icon3.addPixmap(QtGui.QPixmap(":/images/copy.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionCopy.setIcon(icon3)
        self.actionCopy.setObjectName("actionCopy")
        self.actionCut = QtWidgets.QAction(MainWindow)
        icon4 = QtGui.QIcon()
        icon4.addPixmap(QtGui.QPixmap(":/images/cut.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionCut.setIcon(icon4)
        self.actionCut.setObjectName("actionCut")
        self.actionPaste = QtWidgets.QAction(MainWindow)
        icon5 = QtGui.QIcon()
        icon5.addPixmap(QtGui.QPixmap(":/images/paste.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionPaste.setIcon(icon5)
        self.actionPaste.setObjectName("actionPaste")
        self.actionRun = QtWidgets.QAction(MainWindow)
        icon6 = QtGui.QIcon()
        icon6.addPixmap(QtGui.QPixmap(":/images/start.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionRun.setIcon(icon6)
        self.actionRun.setObjectName("actionRun")
        self.actionAbout = QtWidgets.QAction(MainWindow)
        self.actionAbout.setObjectName("actionAbout")
        self.actionAboutQt = QtWidgets.QAction(MainWindow)
        icon7 = QtGui.QIcon()
        icon7.addPixmap(QtGui.QPixmap(":/images/qtcreator.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionAboutQt.setIcon(icon7)
        self.actionAboutQt.setObjectName("actionAboutQt")
        self.actionFiles = QtWidgets.QAction(MainWindow)
        self.actionFiles.setCheckable(True)
        self.actionFiles.setChecked(True)
        self.actionFiles.setObjectName("actionFiles")
        self.actionTokenTree = QtWidgets.QAction(MainWindow)
        self.actionTokenTree.setCheckable(True)
        self.actionTokenTree.setChecked(False)
        self.actionTokenTree.setObjectName("actionTokenTree")
        self.actionSystaxTree = QtWidgets.QAction(MainWindow)
        self.actionSystaxTree.setCheckable(True)
        self.actionSystaxTree.setChecked(False)
        self.actionSystaxTree.setObjectName("actionSystaxTree")
        self.actionBuild = QtWidgets.QAction(MainWindow)
        icon8 = QtGui.QIcon()
        icon8.addPixmap(QtGui.QPixmap(":/images/build.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionBuild.setIcon(icon8)
        self.actionBuild.setObjectName("actionBuild")
        self.actionUndo = QtWidgets.QAction(MainWindow)
        icon9 = QtGui.QIcon()
        icon9.addPixmap(QtGui.QPixmap(":/images/undo.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionUndo.setIcon(icon9)
        self.actionUndo.setObjectName("actionUndo")
        self.actionRedo = QtWidgets.QAction(MainWindow)
        icon10 = QtGui.QIcon()
        icon10.addPixmap(QtGui.QPixmap(":/images/redo.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionRedo.setIcon(icon10)
        self.actionRedo.setObjectName("actionRedo")
        self.actionSelectAll = QtWidgets.QAction(MainWindow)
        self.actionSelectAll.setObjectName("actionSelectAll")
        self.actionRunLexer = QtWidgets.QAction(MainWindow)
        self.actionRunLexer.setObjectName("actionRunLexer")
        self.actionRunParser = QtWidgets.QAction(MainWindow)
        self.actionRunParser.setObjectName("actionRunParser")
        self.actionSaveAs = QtWidgets.QAction(MainWindow)
        self.actionSaveAs.setObjectName("actionSaveAs")
        self.actionToolbar = QtWidgets.QAction(MainWindow)
        self.actionToolbar.setCheckable(True)
        self.actionToolbar.setChecked(True)
        self.actionToolbar.setObjectName("actionToolbar")
        self.actionLexerTest = QtWidgets.QAction(MainWindow)
        self.actionLexerTest.setObjectName("actionLexerTest")
        self.actionParserTest = QtWidgets.QAction(MainWindow)
        self.actionParserTest.setObjectName("actionParserTest")
        self.actionRuntimeTest = QtWidgets.QAction(MainWindow)
        self.actionRuntimeTest.setObjectName("actionRuntimeTest")
        self.actionConsole = QtWidgets.QAction(MainWindow)
        self.actionConsole.setCheckable(True)
        self.actionConsole.setObjectName("actionConsole")
        self.actionError = QtWidgets.QAction(MainWindow)
        self.actionError.setCheckable(True)
        self.actionError.setObjectName("actionError")
        self.actionQuit = QtWidgets.QAction(MainWindow)
        self.actionQuit.setShortcutContext(QtCore.Qt.WindowShortcut)
        self.actionQuit.setObjectName("actionQuit")
        self.menuFile.addAction(self.actionNew)
        self.menuFile.addAction(self.actionOpen)
        self.menuFile.addSeparator()
        self.menuFile.addAction(self.actionSave)
        self.menuFile.addAction(self.actionSaveAs)
        self.menuFile.addSeparator()
        self.menuFile.addAction(self.actionQuit)
        self.menuEditor.addAction(self.actionUndo)
        self.menuEditor.addAction(self.actionRedo)
        self.menuEditor.addSeparator()
        self.menuEditor.addAction(self.actionCopy)
        self.menuEditor.addAction(self.actionCut)
        self.menuEditor.addAction(self.actionPaste)
        self.menuEditor.addSeparator()
        self.menuEditor.addAction(self.actionSelectAll)
        self.menuRun.addAction(self.actionRun)
        self.menuRun.addAction(self.actionBuild)
        self.menuRun.addSeparator()
        self.menuRun.addAction(self.actionRunLexer)
        self.menuRun.addAction(self.actionRunParser)
        self.menuHelp.addAction(self.actionAbout)
        self.menuHelp.addSeparator()
        self.menuHelp.addAction(self.actionAboutQt)
        self.menuView.addSeparator()
        self.menuView.addAction(self.actionToolbar)
        self.menuView.addAction(self.actionConsole)
        self.menuView.addSeparator()
        self.menuView.addAction(self.actionFiles)
        self.menuView.addAction(self.actionTokenTree)
        self.menuView.addAction(self.actionSystaxTree)
        self.menuTest.addAction(self.actionLexerTest)
        self.menuTest.addAction(self.actionParserTest)
        self.menuTest.addAction(self.actionRuntimeTest)
        self.menuBar.addAction(self.menuFile.menuAction())
        self.menuBar.addAction(self.menuEditor.menuAction())
        self.menuBar.addAction(self.menuRun.menuAction())
        self.menuBar.addAction(self.menuView.menuAction())
        self.menuBar.addAction(self.menuTest.menuAction())
        self.menuBar.addAction(self.menuHelp.menuAction())
        self.toolBar.addAction(self.actionNew)
        self.toolBar.addAction(self.actionOpen)
        self.toolBar.addAction(self.actionSave)
        self.toolBar.addAction(self.actionUndo)
        self.toolBar.addAction(self.actionRedo)
        self.toolBar.addAction(self.actionCopy)
        self.toolBar.addAction(self.actionCut)
        self.toolBar.addAction(self.actionPaste)
        self.toolBar.addAction(self.actionBuild)
        self.toolBar.addAction(self.actionRun)

        self.retranslateUi(MainWindow)
        self.tabWidgetBrowser.setCurrentIndex(2)
        self.tabWidgetEditor.setCurrentIndex(0)
        self.tabWidgetOutput.setCurrentIndex(0)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "Cinter"))
        self.tabWidgetBrowser.setTabText(self.tabWidgetBrowser.indexOf(self.tabFile), _translate("MainWindow", "File"))
        self.tabWidgetBrowser.setTabText(self.tabWidgetBrowser.indexOf(self.tabToken),
                                         _translate("MainWindow", "Token"))
        self.tabWidgetBrowser.setTabText(self.tabWidgetBrowser.indexOf(self.tabSyntax),
                                         _translate("MainWindow", "Syntax"))
        self.tabWidgetEditor.setTabText(self.tabWidgetEditor.indexOf(self.tabEditor),
                                        _translate("MainWindow", "New File"))
        self.tabWidgetOutput.setTabText(self.tabWidgetOutput.indexOf(self.tabConsole),
                                        _translate("MainWindow", "Console"))
        self.menuFile.setTitle(_translate("MainWindow", "File"))
        self.menuEditor.setTitle(_translate("MainWindow", "Edit"))
        self.menuRun.setTitle(_translate("MainWindow", "Run"))
        self.menuHelp.setTitle(_translate("MainWindow", "Help"))
        self.menuView.setTitle(_translate("MainWindow", "View"))
        self.menuTest.setTitle(_translate("MainWindow", "Test"))
        self.toolBar.setWindowTitle(_translate("MainWindow", "toolBar"))
        self.actionNew.setText(_translate("MainWindow", "New"))
        self.actionNew.setShortcut(_translate("MainWindow", "Ctrl+N"))
        self.actionOpen.setText(_translate("MainWindow", "Open"))
        self.actionOpen.setShortcut(_translate("MainWindow", "Ctrl+O"))
        self.actionSave.setText(_translate("MainWindow", "Save"))
        self.actionSave.setShortcut(_translate("MainWindow", "Ctrl+S"))
        self.actionCopy.setText(_translate("MainWindow", "Copy"))
        self.actionCopy.setShortcut(_translate("MainWindow", "Ctrl+C"))
        self.actionCut.setText(_translate("MainWindow", "Cut"))
        self.actionCut.setShortcut(_translate("MainWindow", "Ctrl+X"))
        self.actionPaste.setText(_translate("MainWindow", "Paste"))
        self.actionPaste.setShortcut(_translate("MainWindow", "Ctrl+V"))
        self.actionRun.setText(_translate("MainWindow", "Run"))
        self.actionRun.setShortcut(_translate("MainWindow", "F5"))
        self.actionAbout.setText(_translate("MainWindow", "About"))
        self.actionAboutQt.setText(_translate("MainWindow", "AboutQt"))
        self.actionFiles.setText(_translate("MainWindow", "File Tree"))
        self.actionFiles.setShortcut(_translate("MainWindow", "Ctrl+3"))
        self.actionTokenTree.setText(_translate("MainWindow", "Token Tree"))
        self.actionTokenTree.setShortcut(_translate("MainWindow", "Ctrl+4"))
        self.actionSystaxTree.setText(_translate("MainWindow", "Systax Tree"))
        self.actionSystaxTree.setShortcut(_translate("MainWindow", "Ctrl+5"))
        self.actionBuild.setText(_translate("MainWindow", "Build"))
        self.actionBuild.setShortcut(_translate("MainWindow", "Shift+F5"))
        self.actionUndo.setText(_translate("MainWindow", "Undo"))
        self.actionUndo.setToolTip(_translate("MainWindow", "Undo"))
        self.actionUndo.setShortcut(_translate("MainWindow", "Ctrl+Z"))
        self.actionRedo.setText(_translate("MainWindow", "Redo"))
        self.actionRedo.setToolTip(_translate("MainWindow", "Redo"))
        self.actionRedo.setShortcut(_translate("MainWindow", "Ctrl+Y"))
        self.actionSelectAll.setText(_translate("MainWindow", "Select All"))
        self.actionSelectAll.setShortcut(_translate("MainWindow", "Ctrl+A"))
        self.actionRunLexer.setText(_translate("MainWindow", "Run Lexer"))
        self.actionRunLexer.setShortcut(_translate("MainWindow", "Ctrl+L"))
        self.actionRunParser.setText(_translate("MainWindow", "Run Parser"))
        self.actionRunParser.setShortcut(_translate("MainWindow", "Ctrl+P"))
        self.actionSaveAs.setText(_translate("MainWindow", "Save As..."))
        self.actionSaveAs.setShortcut(_translate("MainWindow", "Ctrl+Shift+S"))
        self.actionToolbar.setText(_translate("MainWindow", "Toolbar"))
        self.actionToolbar.setShortcut(_translate("MainWindow", "Ctrl+1"))
        self.actionLexerTest.setText(_translate("MainWindow", "Lexer"))
        self.actionParserTest.setText(_translate("MainWindow", "Parser"))
        self.actionRuntimeTest.setText(_translate("MainWindow", "Runtime"))
        self.actionConsole.setText(_translate("MainWindow", "Console"))
        self.actionConsole.setShortcut(_translate("MainWindow", "Ctrl+2"))
        self.actionError.setText(_translate("MainWindow", "Error"))
        self.actionError.setShortcut(_translate("MainWindow", "Ctrl+3"))
        self.actionQuit.setText(_translate("MainWindow", "Quit"))
        self.actionQuit.setShortcut(_translate("MainWindow", "Ctrl+Q"))


import cinter_rc
